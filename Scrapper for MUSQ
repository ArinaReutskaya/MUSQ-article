pip install selenium pandas webdriver-manager

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd
import time

# Opcje przeglądarki (możesz usunąć headless, żeby widzieć okno)
options = webdriver.ChromeOptions()
# options.add_argument("--headless")  # Odkomentuj, jeśli nie chcesz widzieć okna

driver = webdriver.Chrome(options=options)
url = "https://finance.yahoo.com/quote/MUSQ/history?period1=1688774400&period2=1746641919"
driver.get(url)

wait = WebDriverWait(driver, 15)

# 1. Kliknij "Go to end"
try:
    go_to_end_btn = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[.//span[text()='Go to end']]")))
    go_to_end_btn.click()
    time.sleep(2)
except:
    print("Nie znaleziono przycisku 'Go to end' – może już nie jest wyświetlany.")

# 2. Kliknij "Accept all"
try:
    accept_all_btn = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[.//span[text()='Accept all']]")))
    accept_all_btn.click()
    time.sleep(3)
except:
    print("Nie znaleziono przycisku 'Accept all' – może już kliknięty wcześniej.")

# 3. Poczekaj na załadowanie tabeli
try:
    table = wait.until(EC.presence_of_element_located((By.XPATH, "//table")))
    rows = table.find_elements(By.TAG_NAME, "tr")
except:
    print("Nie udało się załadować tabeli.")

# 4. Parsowanie danych
data = []
for row in rows[1:]:
    cols = row.find_elements(By.TAG_NAME, "td")
    if len(cols) >= 6:
        date = cols[0].text
        close = cols[5].text.replace(",", "")
        if close.lower() not in ['dividend', 'split', '']:  # pomijamy np. dywidendy
            data.append(["MUSQ", date, close])

# 5. Zapis do pliku CSV
df = pd.DataFrame(data, columns=["ETF", "Date", "Close"])
df.to_csv("musq_prices.csv", index=False)

driver.quit()
print("✅ Dane zostały zapisane do musq_prices.csv")
